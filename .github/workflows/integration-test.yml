# .github/workflows/integration-test.yml
name: Integration Test

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  push:
    branches:
      - main # Or a development branch

jobs:
  test:
    permissions:
      issues: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20 # Or your required Node.js version

      - name: Install dependencies
        run: npm install # Or yarn install

      - name: Build Action
        run: npm run package # Or your build command

      - name: Run Action
        uses: ./ # Or your action's repo/tag
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filename: ".github/workflows/reports/report1.json" # Use the sample report
          labels: "integration-test"
          create-labels: "true"
          enable-fix-label: "true"

      - name: Verify Issue Creation
        uses: actions/github-script@v6
        with:
          script: |
            const github = require('@actions/github');
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const label = core.getInput('label');

            try {
              const issues = await github.rest.issues.listForRepo({
                owner,
                repo,
                labels: label,
              });

              if (issues.data.length > 0) {
                const issue = issues.data[0];
                console.log('Issue found: ', issue.title);

                if (!issue.title.includes('Security Alert')) {
                  core.setFailed(`Issue title "${issue.title}" does not contain "Security Alert".`);
                }

              } else {
                core.setFailed('No issues were created by the action.');
              }
            } catch (error) {
              core.setFailed(`Failed to fetch issues: ${error.message}`);
            }